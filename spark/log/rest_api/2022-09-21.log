{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-09-20", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-09-20"}, "err_msg": "[Errno 32] Broken pipe"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-09-19", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-09-19"}, "err_msg": "[Errno 32] Broken pipe"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-09-18", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-09-18"}, "err_msg": "[Errno 32] Broken pipe"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-09-17", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-09-17"}, "err_msg": "[Errno 32] Broken pipe"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-09-16", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-09-16"}, "err_msg": "[Errno 32] Broken pipe"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-09-15", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-09-15"}, "err_msg": "[Errno 32] Broken pipe"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-09-14", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-09-14"}, "err_msg": "[Errno 32] Broken pipe"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-09-13", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-09-13"}, "err_msg": "[Errno 32] Broken pipe"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-09-12", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-09-12"}, "err_msg": "[Errno 32] Broken pipe"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-09-11", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-09-11"}, "err_msg": "[Errno 32] Broken pipe"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-09-10", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-09-10"}, "err_msg": "[Errno 32] Broken pipe"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-09-09", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-09-09"}, "err_msg": "[Errno 32] Broken pipe"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-09-08", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-09-08"}, "err_msg": "[Errno 32] Broken pipe"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-09-07", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-09-07"}, "err_msg": "[Errno 32] Broken pipe"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-09-06", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-09-06"}, "err_msg": "[Errno 32] Broken pipe"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-09-05", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-09-05"}, "err_msg": "[Errno 32] Broken pipe"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-09-04", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-09-04"}, "err_msg": "[Errno 32] Broken pipe"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-09-03", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-09-03"}, "err_msg": "[Errno 32] Broken pipe"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-09-02", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-09-02"}, "err_msg": "[Errno 32] Broken pipe"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-09-01", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-09-01"}, "err_msg": "[Errno 32] Broken pipe"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-08-31", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-08-31"}, "err_msg": "[Errno 32] Broken pipe"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-08-30", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-08-30"}, "err_msg": "[Errno 32] Broken pipe"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-08-29", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-08-29"}, "err_msg": "[Errno 32] Broken pipe"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-08-28", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-08-28"}, "err_msg": "[Errno 32] Broken pipe"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-08-27", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-08-27"}, "err_msg": "[Errno 32] Broken pipe"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-08-26", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-08-26"}, "err_msg": "[Errno 32] Broken pipe"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-08-25", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-08-25"}, "err_msg": "[Errno 32] Broken pipe"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-08-24", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-08-24"}, "err_msg": "/corona_data/patient/corona_patient_2022-08-24.json for client 127.0.0.1 already exists\n\tat org.apache.hadoop.hdfs.server.namenode.FSDirWriteFileOp.startFile(FSDirWriteFileOp.java:389)\n\tat org.apache.hadoop.hdfs.server.namenode.FSNamesystem.startFileInt(FSNamesystem.java:2703)\n\tat org.apache.hadoop.hdfs.server.namenode.FSNamesystem.startFile(FSNamesystem.java:2596)\n\tat org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.create(NameNodeRpcServer.java:799)\n\tat org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.create(ClientNamenodeProtocolServerSideTranslatorPB.java:494)\n\tat org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java)\n\tat org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:604)\n\tat org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:572)\n\tat org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:556)\n\tat org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)\n\tat org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1043)\n\tat org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:971)\n\tat java.base/java.security.AccessController.doPrivileged(Native Method)\n\tat java.base/javax.security.auth.Subject.doAs(Subject.java:423)\n\tat org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)\n\tat org.apache.hadoop.ipc.Server$Handler.run(Server.java:2976)\n"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-08-23", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-08-23"}, "err_msg": "[Errno 32] Broken pipe"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-08-22", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-08-22"}, "err_msg": "[Errno 32] Broken pipe"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-08-21", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-08-21"}, "err_msg": "[Errno 32] Broken pipe"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-08-20", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-08-20"}, "err_msg": "/corona_data/patient/corona_patient_2022-08-20.json for client 127.0.0.1 already exists\n\tat org.apache.hadoop.hdfs.server.namenode.FSDirWriteFileOp.startFile(FSDirWriteFileOp.java:389)\n\tat org.apache.hadoop.hdfs.server.namenode.FSNamesystem.startFileInt(FSNamesystem.java:2703)\n\tat org.apache.hadoop.hdfs.server.namenode.FSNamesystem.startFile(FSNamesystem.java:2596)\n\tat org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.create(NameNodeRpcServer.java:799)\n\tat org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.create(ClientNamenodeProtocolServerSideTranslatorPB.java:494)\n\tat org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java)\n\tat org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:604)\n\tat org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:572)\n\tat org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:556)\n\tat org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)\n\tat org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1043)\n\tat org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:971)\n\tat java.base/java.security.AccessController.doPrivileged(Native Method)\n\tat java.base/javax.security.auth.Subject.doAs(Subject.java:423)\n\tat org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)\n\tat org.apache.hadoop.ipc.Server$Handler.run(Server.java:2976)\n"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-08-19", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-08-19"}, "err_msg": "[Errno 32] Broken pipe"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-08-18", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-08-18"}, "err_msg": "[Errno 32] Broken pipe"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-08-17", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-08-17"}, "err_msg": "[Errno 32] Broken pipe"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-08-16", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-08-16"}, "err_msg": "[Errno 32] Broken pipe"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-08-15", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-08-15"}, "err_msg": "/corona_data/patient/corona_patient_2022-08-15.json for client 127.0.0.1 already exists\n\tat org.apache.hadoop.hdfs.server.namenode.FSDirWriteFileOp.startFile(FSDirWriteFileOp.java:389)\n\tat org.apache.hadoop.hdfs.server.namenode.FSNamesystem.startFileInt(FSNamesystem.java:2703)\n\tat org.apache.hadoop.hdfs.server.namenode.FSNamesystem.startFile(FSNamesystem.java:2596)\n\tat org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.create(NameNodeRpcServer.java:799)\n\tat org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.create(ClientNamenodeProtocolServerSideTranslatorPB.java:494)\n\tat org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java)\n\tat org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:604)\n\tat org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:572)\n\tat org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:556)\n\tat org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)\n\tat org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1043)\n\tat org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:971)\n\tat java.base/java.security.AccessController.doPrivileged(Native Method)\n\tat java.base/javax.security.auth.Subject.doAs(Subject.java:423)\n\tat org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)\n\tat org.apache.hadoop.ipc.Server$Handler.run(Server.java:2976)\n"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-08-14", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-08-14"}, "err_msg": "[Errno 32] Broken pipe"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-08-13", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-08-13"}, "err_msg": "[Errno 32] Broken pipe"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-08-12", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-08-12"}, "err_msg": "[Errno 32] Broken pipe"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-08-11", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-08-11"}, "err_msg": "[Errno 32] Broken pipe"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-08-10", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-08-10"}, "err_msg": "[Errno 32] Broken pipe"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-08-09", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-08-09"}, "err_msg": "[Errno 32] Broken pipe"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-08-08", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-08-08"}, "err_msg": "/corona_data/patient/corona_patient_2022-08-08.json for client 127.0.0.1 already exists\n\tat org.apache.hadoop.hdfs.server.namenode.FSDirWriteFileOp.startFile(FSDirWriteFileOp.java:389)\n\tat org.apache.hadoop.hdfs.server.namenode.FSNamesystem.startFileInt(FSNamesystem.java:2703)\n\tat org.apache.hadoop.hdfs.server.namenode.FSNamesystem.startFile(FSNamesystem.java:2596)\n\tat org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.create(NameNodeRpcServer.java:799)\n\tat org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.create(ClientNamenodeProtocolServerSideTranslatorPB.java:494)\n\tat org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java)\n\tat org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:604)\n\tat org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:572)\n\tat org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:556)\n\tat org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)\n\tat org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1043)\n\tat org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:971)\n\tat java.base/java.security.AccessController.doPrivileged(Native Method)\n\tat java.base/javax.security.auth.Subject.doAs(Subject.java:423)\n\tat org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)\n\tat org.apache.hadoop.ipc.Server$Handler.run(Server.java:2976)\n"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-08-07", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-08-07"}, "err_msg": "/corona_data/patient/corona_patient_2022-08-07.json for client 127.0.0.1 already exists\n\tat org.apache.hadoop.hdfs.server.namenode.FSDirWriteFileOp.startFile(FSDirWriteFileOp.java:389)\n\tat org.apache.hadoop.hdfs.server.namenode.FSNamesystem.startFileInt(FSNamesystem.java:2703)\n\tat org.apache.hadoop.hdfs.server.namenode.FSNamesystem.startFile(FSNamesystem.java:2596)\n\tat org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.create(NameNodeRpcServer.java:799)\n\tat org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.create(ClientNamenodeProtocolServerSideTranslatorPB.java:494)\n\tat org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java)\n\tat org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:604)\n\tat org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:572)\n\tat org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:556)\n\tat org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)\n\tat org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1043)\n\tat org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:971)\n\tat java.base/java.security.AccessController.doPrivileged(Native Method)\n\tat java.base/javax.security.auth.Subject.doAs(Subject.java:423)\n\tat org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)\n\tat org.apache.hadoop.ipc.Server$Handler.run(Server.java:2976)\n"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-08-06", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-08-06"}, "err_msg": "[Errno 32] Broken pipe"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-08-05", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-08-05"}, "err_msg": "[Errno 32] Broken pipe"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-08-04", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-08-04"}, "err_msg": "[Errno 32] Broken pipe"}
{"is_success": "Fail", "type": "corona_patient", "std_day": "2022-08-03", "params": {"serviceKey": "ieyyBBtAz1MCYnzzCoowSgBsd0mIQZMvRafW5mthdtaASR4xv3SSa+2BEv8oxjHNzgfe6LypMzGNG+zCLf39aA==", "pageNo": "1", "numOfRows": "500", "apiType": "JSON", "std_day": "2022-08-03"}, "err_msg": "[Errno 32] Broken pipe"}
